---
import ThemeSelection from "../components/ThemeSelection.astro";
import "../styles/_fonts.scss";
import "../styles/base.scss";
import "../styles/apply-theme.scss";

import "@fontsource/roboto/400.css";
import "@fontsource/roboto/400-italic.css";
import "@fontsource/roboto/700.css";
import "@fontsource/roboto/700-italic.css";

interface Props {
  title?: string;
  ogImage?:string;
}

const { title = "Astro", ogImage } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    {ogImage && <meta property="og:image" content={ogImage} />}
    <script src="$/scripts/subscribeToTheme"></script>
    <script is:inline>
      // We have to set the theme as an inline script so that the information
      // is injected into the html tag before the page is rendered. This prevents
      // a flash of unstyled content.
      const theme = JSON.parse(localStorage.getItem("theme") || "undefined");

      if (theme) {
        document.documentElement.setAttribute("data-theme", theme);
      }
    </script>
  </head>
  <body>
    <header class="top-bar">
      <a href="/">Home</a>
      <ThemeSelection />
    </header>
    <slot />
    <div class="content"></div>
    <style lang="scss">
      @use "$/styles/utils/theme.scss" as theme;

      body {
        display: flex;
        flex-direction: column;
        min-height: 100vh;

        .top-bar {
          display: flex;
          align-items: center;
          padding: 16px;
          justify-content: space-between;

          height: 56px;
          width: 100vw;

          background-color: theme.$color-surface-bg;
        }

        .content {
          width: 100%;
          height: 100%;
        }
      }
    </style>
  </body>
</html>
