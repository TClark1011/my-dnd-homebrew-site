---
import ThemeSelection from "$/components/ThemeSelection";

import "@fontsource/inter/400.css";
import "@fontsource/inter/700.css";

import "$/styles/globalStyles.css";
import * as styles from "./RootLayout.css";

interface Props {
  title?: string;
  ogImage?: string;
  class?: string;
}

const { title = "Astro", ogImage, class: className } = Astro.props;
---

<html lang="en" data-no-theme>
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta property="og:title" content={title} />
    {ogImage && <meta property="og:image" content={ogImage} />}
    <script src="$/scripts/subscribeToTheme"></script>
    <script is:inline>
      // We have to set the theme as an inline script so that the information
      // is injected into the html tag before the page is rendered. This prevents
      // a flash of unstyled content.
      const theme = JSON.parse(localStorage.getItem("theme") || "undefined");

      console.log("Hi!!!");

      if (!"class" in theme) {
        document.documentElement.setAttribute("data-no-theme", "");
      } else {
        document.documentElement.classList.add(theme.class);
        document.documentElement.removeAttribute("data-no-theme");
      }
    </script>
  </head>
  <body class={styles.body}>
    <header class={styles.topBar}>
      <a href="/">Home</a>
      <ThemeSelection client:load />
    </header>
    <div class:list={[styles.content, className]}>
      <slot />
    </div>
  </body>
</html>
